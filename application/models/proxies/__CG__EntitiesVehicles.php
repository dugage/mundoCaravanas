<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Vehicles extends \Entities\Vehicles implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'id', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'licensePlate', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'model', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'vin', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'year', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'color', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'payMethod', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'dischargeDate', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'dischargeDateCode', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'upDate', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'parking', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'customer', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'vehicleTypes', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'vehicleBrands', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'paytype'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'id', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'licensePlate', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'model', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'vin', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'year', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'color', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'payMethod', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'dischargeDate', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'dischargeDateCode', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'upDate', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'parking', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'customer', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'vehicleTypes', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'vehicleBrands', '' . "\0" . 'Entities\\Vehicles' . "\0" . 'paytype'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Vehicles $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicensePlate($licensePlate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicensePlate', [$licensePlate]);

        return parent::setLicensePlate($licensePlate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicensePlate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicensePlate', []);

        return parent::getLicensePlate();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', [$model]);

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', []);

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setVin($vin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVin', [$vin]);

        return parent::setVin($vin);
    }

    /**
     * {@inheritDoc}
     */
    public function getVin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVin', []);

        return parent::getVin();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setColor($color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColor', [$color]);

        return parent::setColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function getColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColor', []);

        return parent::getColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayMethod($payMethod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayMethod', [$payMethod]);

        return parent::setPayMethod($payMethod);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayMethod', []);

        return parent::getPayMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setDischargeDate($dischargeDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDischargeDate', [$dischargeDate]);

        return parent::setDischargeDate($dischargeDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDischargeDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDischargeDate', []);

        return parent::getDischargeDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDischargeDateCode($dischargeDateCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDischargeDateCode', [$dischargeDateCode]);

        return parent::setDischargeDateCode($dischargeDateCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getDischargeDateCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDischargeDateCode', []);

        return parent::getDischargeDateCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpDate($upDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpDate', [$upDate]);

        return parent::setUpDate($upDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpDate', []);

        return parent::getUpDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setParking($parking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParking', [$parking]);

        return parent::setParking($parking);
    }

    /**
     * {@inheritDoc}
     */
    public function getParking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParking', []);

        return parent::getParking();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer($customer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$customer]);

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setVehicleTypes($vehicleTypes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVehicleTypes', [$vehicleTypes]);

        return parent::setVehicleTypes($vehicleTypes);
    }

    /**
     * {@inheritDoc}
     */
    public function getVehicleTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVehicleTypes', []);

        return parent::getVehicleTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function setVehicleBrands($vehicleBrands)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVehicleBrands', [$vehicleBrands]);

        return parent::setVehicleBrands($vehicleBrands);
    }

    /**
     * {@inheritDoc}
     */
    public function getVehicleBrands()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVehicleBrands', []);

        return parent::getVehicleBrands();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaytype($paytype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaytype', [$paytype]);

        return parent::setPaytype($paytype);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaytype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaytype', []);

        return parent::getPaytype();
    }

}
